#pragma once
#include "Component.h"
#include "Sail/netcode/NetworkedStructs.h"

class NetworkSenderComponent : public Component<NetworkSenderComponent> {
public:
	/*
	  type will decide which components are modified for the entity this component belongs to
	  The ownerID is the ID of the player and is used to create a unique ID for the network component
	
	  The first byte of the object ID is set to the ownerID and the rest to the unique ID generated by the player
	*/
	NetworkSenderComponent(Netcode::MessageType dataType, Netcode::EntityType entityType, unsigned char ownerID) :
		m_id(Netcode::createNetworkID() | (static_cast<Netcode::NetworkObjectID>(ownerID) << 18)),
		m_dataType(dataType), m_entityType(entityType) {}

	/*
	  This function should only be used by the host to create pass-through sender components.
	*/
	NetworkSenderComponent(Netcode::MessageType dataType, Netcode::EntityType entityType, Netcode::NetworkObjectID objectID) :
		m_id(objectID), m_dataType(dataType), m_entityType(entityType) {}

	~NetworkSenderComponent() {}


	Netcode::NetworkObjectID m_id;
	Netcode::EntityType m_entityType;

	// Could eventually be changed to a list of types if there are multiple data types per entity one wants to send over the network
	Netcode::MessageType m_dataType;
};
