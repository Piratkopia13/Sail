#ifndef __COMMON_HLSL__
#define __COMMON_HLSL__

#ifdef HLSL
// Shader only

#define MERGE(a, b) a##b

#define PI 3.14159265359
#define M_1_PI 0.318309886183790671538

#else
// C++ only

#pragma once

typedef glm::vec2 float2;
typedef glm::vec3 float3;
typedef glm::vec4 float4;
typedef glm::mat3x3 float3x3;
typedef glm::mat4x4 float4x4;
typedef glm::u32vec2 uint2;
typedef glm::u32vec3 uint3;
typedef UINT32 uint;

namespace DXRShaderCommon {

#endif

static const uint MAX_RAY_RECURSION_DEPTH = 1;
struct ShadowRayPayload {
	bool isHit;
};

#ifndef HLSL
// C++ only

} // End namespace

#endif

#endif // __COMMON_HLSL__